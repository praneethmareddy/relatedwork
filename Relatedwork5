\section{Related Work}
Service Function Chain (SFC) placement has been widely exploreeed in 5G and Beyond-5G (B5G) networks, focusing on optimizing resource allocation, latency, and energy efficiency. Traditional optimization methods such as Mixed Integer Linear Programming (MILP) and Integer Linear Programming (ILP) were initially proposed to minimize cost and bandwidth consumption while meeting Quality of Service (QoS) requirements [1]. However, these approaches suffer from high computational complexity and do not scale well in dynamic network environments.

To improve computational efficiency, heuristic approaches have been developed to provide near-optimal solutions with reduced complexity [2]. These methods, such as Constraint-Aware Shortest Path First (CSPF) and Greedy Placement heuristics, attempt to allocate VNFs efficiently while satisfying latency and resource constraints. Although heuristics significantly reduce computation time, they often lack optimality and adaptability to network changes. Additionally, heuristic-based solutions may struggle to scale in multi-domain or heterogeneous environments, leading to suboptimal performance in large-scale deployments.

To address scalability, reinforcement learning (RL)-based methods such as SCHE2MA introduced distributed decision-making by employing multi-agent RL to place VNFs dynamically across multiple domains [3]. SCHE2MA incorporated an auction-based migration mechanism to balance energy consumption and workload distribution. While this improved adaptability compared to centralized ILP models, SCHE2MA has significant limitations, including long RL training times, inability to generalize to unseen network conditions, and increased overhead due to frequent VNF migrations. Additionally, it does not explicitly support multi-generation networks (2G–6G), making it unsuitable for heterogeneous deployments.

Recent AI-driven methods such as Graph Convolutional Networks (GCN) combined with Maximal Weight Matching (MWM) have emerged as promising solutions for SFC placement [5]. GCN-based approaches efficiently model network topologies as graphs and use deep learning to predict optimal VNF placement in real time, eliminating the need for continuous retraining. Unlike SCHE2MA, GCN models provide instant placement decisions, adapt to changing network conditions, and optimize resource allocation without incurring migration overhead. Furthermore, they support heterogeneous traffic types across multiple network generations by learning from diverse datasets. Compared to RL-based models, AI-driven approaches significantly improve latency, energy efficiency, and scalability in multi-generation networks.

The proposed Extensible Constraint-Aware Pipeline (ECAP) builds upon AI-driven advancements by introducing an adaptive orchestrator designed to optimize latency, reliability, and energy efficiency across 2G–6G networks. ECAP integrates a novel cost function that considers microservice types, multi-generation traffic requirements, and external factors such as deployment location. Additionally, ECAP utilizes Constraint-Aware Shortest Path First (CSPF) and resource-aware allocation mechanisms to select optimal deployment paths, ensuring robust and scalable service delivery in next-generation wireless networks.

\begin{thebibliography}{9}
\bibitem{paper1} F. Yousaf et al., "Orchestrating End-to-End Slices in 5G Networks," in \textit{Proc. IEEE CNSM}, 2019, pp. 1-9.
\bibitem{paper2} C. Wang et al., "Latency-Aware Service Function Chain Placement in 5G Mobile Networks," in \textit{Proc. IEEE NetSoft}, 2019, pp. 1-6.
\bibitem{paper3} X. Zhang et al., "SCHE2MA: Scalable, Energy-Aware, Multi-Domain Orchestration for Beyond-5G URLLC Services," in \textit{Proc. IEEE TMC}, 2020, pp. 1-14.
\bibitem{paper4} J. Lee et al., "Latency and Mobility-Aware Service Function Chain Placement for 5G Networks," in \textit{IEEE Transactions on Mobile Computing}, vol. 19, no. 5, pp. 1156-1169, 2020.
\bibitem{paper5} Z. Yang, R. Gu, and Y. Ji, "Virtual Network Function Placement Based on Differentiated Weight Graph Convolutional Neural Network and Maximal Weight Matching," in \textit{Proc. IEEE TMC}, 2020, pp. 1-10.
\end{thebibliography}
